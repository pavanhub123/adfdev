{
	"name": "MoviesConditionalSplit",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesDB",
						"type": "DatasetReference"
					},
					"name": "MoviesDataBase"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "splitbefore1960",
						"type": "DatasetReference"
					},
					"name": "Conditionalsplitsink"
				},
				{
					"dataset": {
						"referenceName": "splitmovies1960and1980",
						"type": "DatasetReference"
					},
					"name": "sinkmovies1960and1980"
				},
				{
					"dataset": {
						"referenceName": "splitmoviesafter",
						"type": "DatasetReference"
					},
					"name": "sinkmoviesafter"
				}
			],
			"transformations": [
				{
					"name": "ConditionalSplit"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as string,",
				"          title as string,",
				"          genres as string,",
				"          year as short,",
				"          Rating as short,",
				"          {Rotton Tomato} as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MoviesDataBase",
				"MoviesDataBase split(year <1960,",
				"     year <1960 && year <1980,",
				"     disjoint: false) ~> ConditionalSplit@(moviesbefore1960, moviesbefore1960and1980, Moviesafter)",
				"ConditionalSplit@moviesbefore1960 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['moviesbefore1960.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Conditionalsplitsink",
				"ConditionalSplit@moviesbefore1960and1980 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['movies1960and1980.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkmovies1960and1980",
				"ConditionalSplit@Moviesafter sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['moviesafter.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkmoviesafter"
			]
		}
	}
}