{
	"name": "ProductPivotdataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlProductDS",
						"type": "DatasetReference"
					},
					"name": "SourceProduct"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pivotproductdatset",
						"type": "DatasetReference"
					},
					"name": "ProductSink"
				}
			],
			"transformations": [
				{
					"name": "PivotSize"
				},
				{
					"name": "derivedColumnNull"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceProduct",
				"derivedColumnNull pivot(groupBy(Size),",
				"     pivotBy(Color),",
				"     {avg } = avg(StandardCost),",
				"     columnNaming: '$N_$VCalculatedCost',",
				"     lateral: true) ~> PivotSize",
				"SourceProduct derive(Size = iif(isNull(Size) || Size == 'NULL','NA',Size),",
				"          Color = iif(isNull(Color) || Color == 'NULL','NA',Color)) ~> derivedColumnNull",
				"PivotSize sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['PivotProduct.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> ProductSink"
			]
		}
	}
}