{
	"name": "StringifyDataTrans",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "demoJson",
						"type": "DatasetReference"
					},
					"name": "sourceStringify"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SinkMSFTds",
						"type": "DatasetReference"
					},
					"name": "sinkStringify"
				}
			],
			"transformations": [
				{
					"name": "stringify"
				}
			],
			"scriptLines": [
				"source(output(",
				"          name as string,",
				"          location as string,",
				"          satellites as string[],",
				"          goods as (trade as boolean, customers as string[], orders as (orderId as integer, orderTotal as double, shipped as (orderItems as (itemName as string, itemQty as integer)[]))[])",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'singleDocument') ~> sourceStringify",
				"sourceStringify stringify(AllOrders = goods.orders ? string,",
				"     format: 'json') ~> stringify",
				"stringify sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Car_id as string,",
				"          Model as string,",
				"          Colour as string,",
				"          json_value as string,",
				"          locationId as string,",
				"          locationregion as string",
				"     ),",
				"     partitionFileNames:['MSFTSTringify.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          name,",
				"          location,",
				"          satellites,",
				"          AllOrders",
				"     ),",
				"     partitionBy('hash', 1)) ~> sinkStringify"
			]
		}
	}
}