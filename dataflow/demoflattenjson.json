{
	"name": "demoflattenjson",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "demoJson",
						"type": "DatasetReference"
					},
					"name": "SourceJSON"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "JsonSinkDataSet",
						"type": "DatasetReference"
					},
					"name": "JSONSInk"
				}
			],
			"transformations": [
				{
					"name": "FlattenJSONTransformation"
				}
			],
			"scriptLines": [
				"source(output(",
				"          name as string,",
				"          location as string,",
				"          satellites as string[],",
				"          goods as (trade as boolean, customers as string[], orders as (orderId as integer, orderTotal as double, shipped as (orderItems as (itemName as string, itemQty as integer)[]))[])",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> SourceJSON",
				"SourceJSON foldDown(unroll(goods.orders.shipped.orderItems, goods.orders),",
				"     mapColumn(",
				"          orderId = goods.orders.orderId,",
				"          itemname = goods.orders.shipped.orderItems.itemName,",
				"          itemQty = goods.orders.shipped.orderItems.itemQty",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlattenJSONTransformation",
				"FlattenJSONTransformation sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> JSONSInk"
			]
		}
	}
}